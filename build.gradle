import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
}

ext {
	postgresqlVersion = "42.5.4"
	assertjVersion = "3.24.2"
	springBoot = "3.0.4"
	jacksonModuleKotlin = "2.14.2"
	kotlinReflect="1.8.10"
}

group = 'com.vasily.mikhailov'
version = '0.1'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBoot}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBoot}"
	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonModuleKotlin}"
	implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinReflect}"
	runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBoot}"
	testImplementation "org.assertj:assertj-core:${assertjVersion}"
}

tasks.register('copyFrontend', Copy) {
	from("${rootProject.projectDir}/frontend/build")
	into("${rootProject.projectDir}/src/main/resources/static/")
}

jar {
	dependsOn(copyFrontend)
}

clean.doFirst {
	delete "${rootProject.projectDir}/src/main/resources/static/"
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
